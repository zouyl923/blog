// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	v1admin "blog/app/admin/api/internal/handler/v1/admin"
	v1articlearticle "blog/app/admin/api/internal/handler/v1/article/article"
	v1articlecategory "blog/app/admin/api/internal/handler/v1/article/category"
	v1login "blog/app/admin/api/internal/handler/v1/login"
	v1systemmenu "blog/app/admin/api/internal/handler/v1/system/menu"
	v1systempermission "blog/app/admin/api/internal/handler/v1/system/permission"
	v1systemrole "blog/app/admin/api/internal/handler/v1/system/role"
	"blog/app/admin/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.AuthMiddleware, serverCtx.PermissionMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/all_list",
					Handler: v1admin.AllListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/delete",
					Handler: v1admin.DeleteHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/info",
					Handler: v1admin.InfoHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/page_list",
					Handler: v1admin.PageListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/update",
					Handler: v1admin.UpdateHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1/admin"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.AuthMiddleware, serverCtx.PermissionMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/delete",
					Handler: v1articlearticle.DeleteHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/info",
					Handler: v1articlearticle.InfoHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/page_list",
					Handler: v1articlearticle.PageHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/update",
					Handler: v1articlearticle.UpdateHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1/article/article"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.AuthMiddleware, serverCtx.PermissionMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/delete",
					Handler: v1articlecategory.DeleteHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/info",
					Handler: v1articlecategory.InfoHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/tree_list",
					Handler: v1articlecategory.TreeHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/update",
					Handler: v1articlecategory.UpdateHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1/article/category"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware},
			[]rest.Route{
				{
					// 获取环境信息
					Method:  http.MethodGet,
					Path:    "/env",
					Handler: v1login.EnvHandler(serverCtx),
				},
				{
					// 登录
					Method:  http.MethodPost,
					Path:    "/login",
					Handler: v1login.LoginHandler(serverCtx),
				},
				{
					// 刷新token
					Method:  http.MethodPost,
					Path:    "/refresh_token",
					Handler: v1login.RefreshHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1/login"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					// 验证是否登录成功，并刷新token
					Method:  http.MethodPost,
					Path:    "/check",
					Handler: v1login.CheckHandler(serverCtx),
				},
				{
					// 管理员信息
					Method:  http.MethodGet,
					Path:    "/info",
					Handler: v1login.InfoHandler(serverCtx),
				},
				{
					// 退出登录
					Method:  http.MethodPost,
					Path:    "/login_out",
					Handler: v1login.LoginOutHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1/login"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.AuthMiddleware, serverCtx.PermissionMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/delete",
					Handler: v1systemmenu.DeleteHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/info",
					Handler: v1systemmenu.InfoHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/tree_list",
					Handler: v1systemmenu.TreeHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/update",
					Handler: v1systemmenu.UpdateHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1/system/menu"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.AuthMiddleware, serverCtx.PermissionMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/delete",
					Handler: v1systempermission.DeleteHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/info",
					Handler: v1systempermission.InfoHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/tree_list",
					Handler: v1systempermission.TreeHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/update",
					Handler: v1systempermission.UpdateHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1/system/permission"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.AuthMiddleware, serverCtx.PermissionMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/all_list",
					Handler: v1systemrole.AllListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/delete",
					Handler: v1systemrole.DeleteHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/info",
					Handler: v1systemrole.InfoHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/page_list",
					Handler: v1systemrole.ListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/update",
					Handler: v1systemrole.UpdateHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1/system/role"),
	)
}
